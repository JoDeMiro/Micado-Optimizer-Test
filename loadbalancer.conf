# Status module
# LoadModule status_module modules/mod_status.so
LoadModule status_module libexec/apache2/mod_status.so
ExtendedStatus On

<Location "/server-status">
      SetHandler server-status
      <RequireAll>
            Require all granted
      </RequireAll>
</Location>

<VirtualHost *:80>
	ServerName localhost
	ServerSignature Off
        ProxyPreserveHost On
        ProxyRequests Off
	Timeout 3600
	ProxyTimeout 3600
	SetEnv proxy-nokeepalive 1
	SetEnv proxy-initial-not-pooled 1

        # Your balanced backends

        <Proxy balancer://backend-cluster>
                # Ide kell beírni a Workerek belső hálózati ip címét
                # BalancerMember http://192.168.0.253:8080 retry=1 acquire=900 timeout=360 Keepalive=On
		BalancerMember http://192.168.0.31:8080
		BalancerMember http://192.168.0.112:8080
		BalancerMember http://192.168.0.119:8080
                BalancerMember http://192.168.0.135:8080
                BalancerMember http://192.168.0.140:8080
                BalancerMember http://192.168.0.152:8080
                BalancerMember http://192.168.0.182:8080
                BalancerMember http://192.168.0.190:8080
		BalancerMember http://192.168.0.174:8080
                BalancerMember http://192.168.0.121:8080
                BalancerMember http://192.168.0.207:8080
                BalancerMember http://192.168.0.164:8080

                ProxySet lbmethod=bybusyness
                ProxySet maxattempts=1
		ProxySet TimeOut=3600
        </Proxy>


	<Location "/actuator/health">
		ProxyPass http://192.168.0.170:8080/actuator/health
	</Location>


        # Balancer admin interface for localhost access
        <Location /balancer-manager>
                SetHandler balancer-manager
                Order Allow,Deny
                Allow from all
        </Location>


        ProxyPass /balancer-manager !
	ProxyPass /server-status !

        # Proxying everything to your backends
	ProxyPass / balancer://backend-cluster/


</VirtualHost>

<Location />
    Order Deny,Allow
    Deny from all
    Allow from 94.21.55.118 192.168.0 195.111.2.2 193.225.250.30
</Location>


# New Fuck
# %D in log format
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" vhost_combined
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" zorba
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" combined
LogFormat "%h %l %u %t \"%r\" %>s %O %D" common

# Filter advanced
SetEnvIf Status ^200$ log_status_200
SetEnvIf Request_URI "^/cpu" log_url_cpu
SetEnvIf Request_URI "^/wait" log_url_wait
SetEnvIf Request_URI "^/ffmpeg" log_url_ffmpeg

# Egyéni környezeti változó beállítása, ha bármelyik feltétel teljesül
SetEnvIf Request_URI "^/ffmpeg" log_url_spec
SetEnvIf Request_URI "^/wait" log_url_spec
SetEnvIF Request_URI "^/mongodb" log_url_spec

# SetEnvIf User-Agent "internal dummy connection" dontlog_internal
# SetEnvIf Remote_Addr "::1" dontlog_remote
# SetEnvIf Request_URI "^/balancer-manager" dontlog_balancemanager
# SetEnvIf Request_URI "^/server-status" dontlog_serverstatus

# A szűrési szabályok alapján történő logolás beállítása
CustomLog /var/log/apache2/zulu.log zorba env=log_url_cpu
CustomLog /var/log/apache2/zulu.log zorba env=log_url_ffmpeg

# Elvileg most mindkét szabály érvényesül és az ffmpeg és a wait is bekerül a zulu.log-ba
CustomLog /var/log/apache2/zulu.log zorba env=log_url_spec
