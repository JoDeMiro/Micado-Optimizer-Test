
<VirtualHost *:80>
	ServerName localhost
	ServerSignature Off
        ProxyPreserveHost On
        ProxyRequests Off
	Timeout 3600
	ProxyTimeout 3600
	SetEnv proxy-nokeepalive 1
	SetEnv proxy-initial-not-pooled 1

        # Your balanced backends

        <Proxy balancer://backend-cluster>
                # Ide kell beírni a Workerek belső hálózati ip címét
                # BalancerMember http://192.168.0.253:8080 retry=1 acquire=900 timeout=360 Keepalive=On
		BalancerMember http://192.168.0.253:8080
                BalancerMember http://192.168.0.245:8080
                BalancerMember http://192.168.0.73:8080
                BalancerMember http://192.168.0.203:8080
                BalancerMember http://192.168.0.41:8080
                BalancerMember http://192.168.0.175:8080
                BalancerMember http://192.168.0.218:8080

                ProxySet lbmethod=bybusyness
                ProxySet maxattempts=1
		ProxySet TimeOut=3600
        	SetEnv proxy-nokeepalive 1
	        SetEnv proxy-initial-not-pooled 1


        </Proxy>
        # Balancer admin interface for localhost access
        <Location /balancer-manager>
                SetHandler balancer-manager
                Order Allow,Deny
                Allow from all
        </Location>

        # mod_status admin interface for localhost access
        <Location /server-status>
                # SetHandler balancer-manager
		SetHandler server-status
                Order Deny,Allow
                Allow from all
        </Location>

        ProxyPass /balancer-manager !
	ProxyPass /server-status !
        # Proxying everything to your backends
        ProxyPass / balancer://backend-cluster/

</VirtualHost>

<Location />
    Order Deny,Allow
    Deny from all
    Allow from 80.95.82.243
</Location>

<Location /server-status>
    SetHandler server-status
    Order allow,deny
    allow from all
    AuthUserFile /etc/apache2/.htpasswd
    AuthType Basic
    AuthName "Make up a name here for who can access Apache status"
    Require user pisti
</Location>


# New Fuck
# %D in log format
# LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" vhost_combined
# LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" combined
# LogFormat "%h %l %u %t \"%r\" %>s %O %D" common

LoadModule status_module libexec/apache2/mod_status.so

# New Fuck
# %D in log format
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" vhost_combined
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" %D" zorba
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" combined
LogFormat "%h %l %u %t \"%r\" %>s %O %D" common


#Filter wait exactly
#SetEnvIf Request_URI "^/wait/$" dontlog
#CustomLog /var/log/apache2/dontlog.log vhost_combined env=dontlog

#Filter starts with wait
#SetEnvIf Request_URI "^/wait/" nelog
CustomLog /var/log/apache2/nelog.log zorba env=nelog

# Filter balancer-manager
SetEnvIf Request_URI "^/balancer-manager" neloga
CustomLog /var/log/apache2/balancer_manager.log zorba env=neloga

#Filter server-status
SetEnvIf Request_URI "^/server-status" nelogb
CustomLog /var/log/apache2/server_status.log zorba env=nelogb


# Zorba (nem jo - hiaba szurom mar bele ir az other_vhosts_combined.log filba)
# CustomLog /var/log/apache2/other_vhosts_combined.log vhost_combined env=!nelog

# aa (filter wait)
# CustomLog /var/log/apache2/zenu.log vhost_combined env=!nelog


## bb (filter balancer-manager)
CustomLog /var/log/apache2/zulu.log vhost_combined env=!neloga

## cc (filter server-status)
CustomLog /var/log/apache2/zoro.log vhost_combined env=!nelogb

