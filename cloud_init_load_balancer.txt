#cloud-config

write_files:
- path: /bin/load-balancer-add-user.sh
  content: |
    #!/bin/bash
    export USR='ubuntu'
    echo " -------------------------------------------------------------------------------------- "
    echo " -------------------------------------------------------------------------------------- "
    echo -e " ez \n itt \n egy \n proba"
    echo "-----------------------------"
    echo "ez \n itt \n egy \n proba"
    printf "ez itt egy printf proba \n remelem mukodik \n vagy nem"
    echo " -------------------------------------------------------------------------------------- "
    echo " -------------------------------------------------------------------------------------- "
    echo " "
    echo "---------------> Creating user \"$USR\" starts."
    echo " "
    adduser --disabled-password --gecos "" $USR
    echo " "
    echo "---------------> Creating user \"$USR\" finished."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-update.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Update Ubuntu."
    echo " "
    sudo apt-get -y update
    echo " "
    echo "---------------> Update Ubuntu finished."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-add-base-tools.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Installing base tools (zip,venv) starts."
    echo " "
    sudo apt-get -y install zip
    sudo apt-get -y install unzip
    sudo apt-get -y install fish
    sudo apt-get -y install htop
    sudo apt-get -y install git
    sudo apt-get -y install openssh-client
    echo " "
    echo "---------------> Installing base tools (zip,venv) finished."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-install-ext.sh
  content: |
    #!/bin/bash
    echo "---------------> Installing some stuff needed for Python."
    
    # These are requred for some Python module
    
    sudo apt-get -y install libc6-dev
    sudo apt-get -y install libsm6
    sudo apt-get -y install libxext6
    sudo apt-get -y install graphviz
    
    echo "---------------> Installing some stuff needed for Python finished."
  permissions: '755'

- path: /bin/load-balancer-install-bashtop.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Install Bashtop."
    echo " "
    git clone https://github.com/aristocratos/bashtop

    # cd bashtop
    # bash bashtop

    echo " "
    echo "---------------> Install Bashtop finished."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-install-loadbalancer.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Install Apache 2 Loadbalancer."
    echo " "
    sudo apt-get -y install apache2
    sudo apt-get -y install libapache2-mod-jk
    sudo ufw app list
    sudo ufw allow 'Apache'
    sudo ufw status
    sudo a2enmod proxy
    sudo a2enmod proxy_http
    sudo a2enmod proxy_balancer
    # sudo a2enmod lbmethod_byrequests
    # sudo a2enmod lbmethod_bytraffic
    sudo a2enmod lbmethod_bybusyness
    # sudo a2enmod lbmethod_heartbeat
    # https://httpd.apache.org/docs/2.4/mod/mod_lbmethod_byrequests.html
    # https://httpd.apache.org/docs/2.4/mod/mod_proxy_balancer.html
    # https://wiki.logicaldoc.com/wiki/Configure_Apache_load_balancer_with_mod_proxy
    sudo a2enmod slotmem_shm
    sudo apt-get -y install ntpdate tmux collectl moreutils
    sudo ntpdate -s time.nist.gov
    sudo systemctl restart apache2
    
    # Load Balancer for Java TomCat

    # https://madurad.wordpress.com/2014/08/27/tomcat-server-loab-balancing-using-multiple-tomcat-server-instances-in-ubuntu
    # https://www.xmodulo.com/configure-tomcat-cluster-ubuntu.html
    # https://medium.com/@sanjayadesilva6/setting-up-apache-loadbalancer-46072177ec66
    # https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-18-04-quickstart
    # https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-20-04
    # https://ubuntu.com/tutorials/install-and-configure-apache#5-activating-virtualhost-file
    # https://httpd.apache.org/docs/2.4/mod/mod_proxy_balancer.html
    # https://aws.amazon.com/premiumsupport/knowledge-center/elb-fix-high-latency-on-alb
    # https://stackoverflow.com/questions/52433480/spring-boot-application-load-balanced-with-apache
    # https://www.datadoghq.com/blog/collect-apache-performance-metrics

    # http://193.2xx.xxx.xxx/balancer-manager/myapp
    
    sudo mkdir /var/www/loadbalancer
    sudo chown -R $USER:$USER /var/www/loadbalancer
    sudo chmod -R 755 /var/www/loadbalancer
    sudo printf "<html><head><title>Hello Loadbalancer</title></head><body>Hello</body></html>" >> index.html
    sudo cp index.html /var/www/loadbalancer/index.html
    
    wget https://raw.githubusercontent.com/JoDeMiro/Micado-Optimizer-Test/main/loadbalancer.conf
    sudo cp loadbalancer.conf /etc/apache2/sites-available/loadbalancer.conf
    sudo a2ensite loadbalancer.conf
    sudo a2dissite 000-default.conf
    
    # Make log more readable to get Response Time
    wget https://raw.githubusercontent.com/JoDeMiro/Micado-Optimizer-Test/main/apache2.conf
    sudo cp apache2.conf /etc/apache2/apache2.conf
    
    echo " "
    echo "---------------------------------------------------------------------------"
    echo " "
    
    # Run apache2 configtest
    sudo apache2ctl configtest

    echo " "
    echo "---------------------------------------------------------------------------"
    echo " "

    echo " "
    echo "---------------> Start Apache 2 Loadbalancer"
    echo " "
    
    sudo systemctl restart apache2
    sudo systemctl reload apache2

    echo " "
    echo "---------------> Install Apache 2 Loadbalancer finished."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-install-python.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Install Python stuffs for me."
    echo " "
    ls -l /home/ubuntu/.local/bin
    export PATH=$PATH:/home/ubuntu/.local/bin
    pip3 install --upgrade pip
    pip3 install virtualenv
    ls -l /home/ubuntu/.local/bin
    export PATH=$PATH:/home/ubuntu/.local/bin
    virtualenv notebook
    source notebook/bin/activate
    wget --no-cache https://raw.githubusercontent.com/JoDeMiro/Micado-Optimizer-Test/main/requirements_jupyter.txt
    pip3 install -r requirements_jupyter.txt
    echo " "
    echo "---------------> Install Python stuffs for me finished."
    echo " "
  permissions: '755'
  
- path: /bin/load-balancer-install-jupyter.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Install Jupyter Notebook Extentions."
    echo " "
    ls -l /home/ubuntu/.local/bin
    export PATH=$PATH:/home/ubuntu/.local/bin
    source notebook/bin/activate
    # jupyter notebook --generate-config
    jupyter contrib
    jupyter contrib --version
    jupyter contrib nbextension install --user
    jupyter nbextensions_configurator enable --user
    echo " "
    echo "---------------> Warning !. Jupyter Notebeook should start manually."
    echo " "

    # jupyter notebook password
    # jupyter notebook --ip=0.0.0.0 --port=8888 --no-browse

    echo " "
    echo "---------------> Install Jupyter Notebook Extentions finished."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-install-ssh.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Nyomorek id_rsa-t fell kell rakni az .ssh konyvtrba onnan meg at a root-nak hogy elerje a workereket."
    echo " "

    # scp /home/ubuntu/.ssh/id_rsa ubuntu@xxx.xxx.xxx.xxx:/home/ubuntu/.ssh/
    # cp /home/ubuntu/.ssh/id_rsa /root/.ssh/

    echo " "
    echo "---------------> Nyomorek id_rsa-t fell kell rakni az .ssh konyvtrba onnan meg at a root-nak hogy elerje a workereket."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-install-latex.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Install Latex started."
    echo " "

    sudo apt-get -y install dvipng texlive-latex-extra texlive-fonts-recommended cm-super

    echo " "
    echo "---------------> Install Latex finishted."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-install-scaler.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Install Scaler started."
    echo " "

    git clone https://github.com/JoDeMiro/Scaler.git

    echo " "
    echo "---------------> Install Scaler finishted."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-config-git.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Config Git started."
    echo " "

    git config --global user.name "JoDeMiro"
    git config --global user.email "joedemiro@pintye.com"

    echo " "
    echo "---------------> Config Git finishted."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-clean.sh
  content: |
    #!/bin/bash
    echo " "
    echo "---------------> Install Cleaner started."
    echo " "

    sudo apt-get -y autoclean
    sudo apt-get -y autoremove
    sudo apt-get -y purge

    echo " "
    echo "---------------> Install Cleaner finishted."
    echo " "
  permissions: '755'

- path: /bin/load-balancer-todo.sh
  content: |
    #!/bin/bash
    echo " "
    echo " "

    echo "-------------------------------------------------------------------"
    echo " "
    echo "            - Le kell jelszavazni a Jupytert                       "
    echo "              jupyter notebook password                            "
    echo "            - Fell kell tolni az SSH kulcsot                       "
    echo "            - El kell inditani a Jupytert                          "
    echo "              jupyter notebook --ip=0.0.0.0 --port=8888 --no-browse"
    echo "            - Fel kell venni a Worker IP cimeket a Balancerbe      "
    echo " "
    echo "-------------------------------------------------------------------"

    echo " "
    echo " "
  permissions: '755'
  
runcmd:
- echo "---------------> JoDeMiro Deployment starts."
- /bin/load-balancer-add-user.sh
- su - ubuntu -c /bin/load-balancer-update.sh
- su - ubuntu -c /bin/load-balancer-add-base-tools.sh
# - su - ubuntu -c /bin/load-balancer-install-ext.sh
- su - ubuntu -c /bin/load-balancer-install-bashtop.sh
- su - ubuntu -c /bin/load-balancer-install-python.sh
- su - ubuntu -c /bin/load-balancer-install-jupyter.sh
- su - ubuntu -c /bin/load-balancer-install-loadbalancer.sh
# - su - ubuntu -c /bin/load-balancer-install-latex.sh
- su - ubuntu -c /bin/load-balancer-install-ssh.sh
- su - ubuntu -c /bin/load-balancer-install-scaler.sh
- su - ubuntu -c /bin/load-balancer-config-git.sh
- su - ubuntu -c /bin/load-balancer-clean.sh
- su - ubuntu -c /bin/load-balancer-todo.sh
- echo "---------------> JoDeMiro Deployment finished."
